---
// Project detail component for individual project pages
import { projects } from '../data/projects';

export interface Props {
  projectId?: string;
}

const { projectId } = Astro.props;
const project = projectId ? projects.find(p => p.id === projectId) : null;

if (!project) {
  throw new Error(`Project with id ${projectId} not found`);
}
---

<section class="min-h-screen bg-slate-50 py-20">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Back Navigation -->
    <div class="mb-8">
      <a
        href="/#projects"
        class="inline-flex items-center text-sky-600 hover:text-sky-700 transition-colors group"
      >
        <svg class="w-5 h-5 mr-2 group-hover:-translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
        </svg>
        Back to Projects
      </a>
    </div>

    <!-- Hero Section -->
    <div class="mb-16">
      <div class="flex flex-col lg:flex-row gap-8 items-start">
        <!-- Project Image -->
        <div class="lg:w-1/2">
          <div class="relative overflow-hidden rounded-2xl bg-gradient-to-br from-primary-500/10 to-accent-500/10 p-8">
            <div class="aspect-video bg-gradient-to-br from-primary-500/20 to-accent-500/20 rounded-lg flex items-center justify-center">
              <div class="text-center text-dark-500">
                <svg class="w-24 h-24 mx-auto mb-4 opacity-50" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                <p class="text-lg font-medium">{project.title}</p>
                <p class="text-sm text-dark-400 mt-2">Project Screenshot</p>
              </div>
            </div>

            <!-- Project Badges -->
            <div class="absolute top-4 left-4 flex gap-2">
              {project.featured && (
                <span class="bg-sky-500 text-white px-3 py-1 rounded-full text-xs font-medium">
                  Featured
                </span>
              )}
              <span class={`px-3 py-1 rounded-full text-xs font-medium ${
                project.status === 'completed' ? 'bg-green-500 text-white' :
                project.status === 'in-progress' ? 'bg-yellow-500 text-white' :
                'bg-blue-500 text-white'
              }`}>
                {project.status === 'completed' ? 'Completed' :
                 project.status === 'in-progress' ? 'In Progress' :
                 'Published'}
              </span>
            </div>

            <!-- Action Buttons -->
            <div class="absolute bottom-4 right-4 flex gap-2">
              {project.githubUrl && (
                <a
                  href={project.githubUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="bg-white/20 backdrop-blur-sm p-3 rounded-full hover:bg-white/30 transition-colors"
                  aria-label="View GitHub Repository"
                >
                  <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                  </svg>
                </a>
              )}
              {project.liveUrl && (
                <a
                  href={project.liveUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="bg-white/20 backdrop-blur-sm p-3 rounded-full hover:bg-white/30 transition-colors"
                  aria-label="View Live Demo"
                >
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                  </svg>
                </a>
              )}
            </div>
          </div>
        </div>

        <!-- Project Info -->
        <div class="lg:w-1/2">
          <div class="flex items-center gap-4 mb-4">
            <span class="px-4 py-2 bg-sky-100 text-sky-700 rounded-full font-medium">
              {project.category}
            </span>
            <span class="text-slate-500">{project.year}</span>
          </div>

          <h1 class="text-4xl lg:text-5xl font-bold text-slate-900 mb-6">
            {project.title}
          </h1>

          <p class="text-xl text-slate-600 mb-8 leading-relaxed">
            {project.longDescription}
          </p>

          <!-- Technologies -->
          <div class="mb-8">
            <h3 class="text-lg font-semibold text-slate-900 mb-4">Technologies Used</h3>
            <div class="flex flex-wrap gap-2">
              {project.technologies.map(tech => (
                <span class="px-3 py-2 bg-slate-100 text-slate-700 rounded-lg text-sm font-medium hover:bg-sky-100 hover:text-sky-700 transition-colors cursor-default">
                  {tech}
                </span>
              ))}
            </div>
          </div>

          <!-- Metrics -->
          {project.metrics && project.metrics.length > 0 && (
            <div class="grid grid-cols-2 gap-4">
              {project.metrics.map(metric => (
                <div class="text-center p-4 bg-white rounded-lg border border-slate-200">
                  <div class="text-2xl font-bold text-sky-600 mb-1">{metric.value}</div>
                  <div class="text-sm text-slate-600">{metric.label}</div>
                </div>
              ))}
            </div>
          )}
        </div>
      </div>
    </div>

    <!-- Screenshots Gallery -->
    {project.screenshots && project.screenshots.length > 0 && (
      <div class="mb-16">
        <h2 class="text-3xl font-bold text-slate-900 mb-8 text-center">Project Screenshots</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {project.screenshots.map((screenshot, index) => (
            <div class="group cursor-pointer" data-screenshot={screenshot}>
              <div class="aspect-video bg-gradient-to-br from-sky-500/10 to-purple-500/10 rounded-lg overflow-hidden border border-slate-200 group-hover:border-sky-300 transition-colors">
                <div class="w-full h-full flex items-center justify-center text-slate-400">
                  <div class="text-center">
                    <svg class="w-16 h-16 mx-auto mb-2 opacity-50" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                    </svg>
                    <p class="text-sm font-medium">Screenshot {index + 1}</p>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    )}

    <!-- Features Section -->
    {project.features && project.features.length > 0 && (
      <div class="mb-16">
        <h2 class="text-3xl font-bold text-slate-900 mb-8 text-center">Key Features</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          {project.features.map((feature, index) => (
            <div class="flex items-start space-x-4 p-6 bg-white rounded-lg border border-slate-200 hover:border-sky-300 transition-colors">
              <div class="w-8 h-8 bg-sky-100 rounded-lg flex items-center justify-center flex-shrink-0">
                <svg class="w-5 h-5 text-sky-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                </svg>
              </div>
              <p class="text-slate-700">{feature}</p>
            </div>
          ))}
        </div>
      </div>
    )}

    <!-- Challenges & Learnings -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
      <!-- Challenges -->
      {project.challenges && project.challenges.length > 0 && (
        <div>
          <h2 class="text-2xl font-bold text-slate-900 mb-6 flex items-center">
            <svg class="w-6 h-6 mr-3 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"/>
            </svg>
            Challenges Overcome
          </h2>
          <div class="space-y-4">
            {project.challenges.map((challenge, index) => (
              <div class="p-4 bg-red-50 border border-red-200 rounded-lg">
                <p class="text-red-800">{challenge}</p>
              </div>
            ))}
          </div>
        </div>
      )}

      <!-- Learnings -->
      {project.learnings && project.learnings.length > 0 && (
        <div>
          <h2 class="text-2xl font-bold text-slate-900 mb-6 flex items-center">
            <svg class="w-6 h-6 mr-3 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"/>
            </svg>
            Key Learnings
          </h2>
          <div class="space-y-4">
            {project.learnings.map((learning, index) => (
              <div class="p-4 bg-green-50 border border-green-200 rounded-lg">
                <p class="text-green-800">{learning}</p>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>

    <!-- Call to Action -->
    <div class="mt-16 text-center">
      <div class="bg-gradient-to-r from-sky-500 to-purple-500 rounded-2xl p-8 text-white">
        <h3 class="text-2xl font-bold mb-4">Interested in This Project?</h3>
        <p class="text-lg mb-6 opacity-90">
          Want to learn more about the implementation details or discuss similar projects?
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          {project.githubUrl && (
            <a
              href={project.githubUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="bg-white text-sky-600 px-6 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors"
            >
              View Source Code
            </a>
          )}
          {project.liveUrl && (
            <a
              href={project.liveUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="bg-sky-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-sky-700 transition-colors"
            >
              Live Demo
            </a>
          )}
          <a
            href="/#contact"
            class="border-2 border-white text-white px-6 py-3 rounded-lg font-semibold hover:bg-white hover:text-sky-600 transition-colors"
          >
            Get In Touch
          </a>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Screenshot modal functionality
  document.querySelectorAll('[data-screenshot]').forEach(item => {
    item.addEventListener('click', () => {
      // Implement screenshot modal if needed
      console.log('Screenshot clicked:', item.getAttribute('data-screenshot'));
    });
  });

  // Smooth scroll animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.style.opacity = '1';
        entry.target.style.transform = 'translateY(0)';
      }
    });
  }, observerOptions);

  // Observe sections for animations
  document.querySelectorAll('div[class*="mb-16"], div[class*="mb-12"]').forEach(section => {
    section.style.opacity = '0';
    section.style.transform = 'translateY(30px)';
    section.style.transition = 'all 0.6s ease-out';
    observer.observe(section);
  });
</script>

<style>
  /* Custom styles */
  .gradient-text {
    background: linear-gradient(135deg, #0ea5e9, #8b5cf6);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
</style>
